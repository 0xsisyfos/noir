name: Wasm

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Wasm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-22.11
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build noir_wasm with Nix
      #   run: |
      #     nix build .#wasm
      #     echo "Build result:"
      # ls -la result/pkg

      # - name: Build wasm crate with Nix
      #   working-directory: ./crates/wasm
      #   run: nix-build wasm.nix

      # - name: Install wasm-pack
      #   run: cargo install wasm-pack

      # - name: Build wasm
      #   working-directory: ./crates/wasm
      # run: ./build-wasm

      - name: Build noir_wasm with Nix flakes
        run: |
          chmod +x ./crates/wasm/build-wasm
          nix build .#wasm
          echo "Build result:"
          ls -la result/pkg

      - name: Copy wasm build result
        working-directory: ./crates/wasm
        run: cp -r ./result ./pkg

      - name: Checkout noir-wasm-testing
        uses: actions/checkout@v3
        with:
          repository: noir-lang/noir-wasm-testing
          path: noir-wasm-testing

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Inject built wasm into noir-wasm-testing
        run: |
          cp -r ./crates/wasm/result ./noir-wasm-testing/@noir-lang_noir_wasm
          jq '.dependencies["@noir-lang/noir_wasm"] = "file:./node_modules/@noir-lang/noir_wasm"' ./noir-wasm-testing/package.json > ./noir-wasm-testing/package.json.tmp
          mv ./noir-wasm-testing/package.json.tmp ./noir-wasm-testing/package.json

      - name: Log package information
        working-directory: ./noir-wasm-testing
        run: |
          echo "Wasm contents:"
          ls -la ./@noir-lang_noir_wasm
          echo "Directory contents:"
          ls -la
          echo "package.json contents:"
          cat package.json
          echo "Checking if noir-script.json exists:"
          if [ -f "./src/noir-script/target/noir-script.json" ]; then
            echo "File exists."
          else
            echo "File does not exist."
          fi

      - name: Run build.sh in noir-wasm-testing
        working-directory: ./noir-wasm-testing
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Install dependencies
        working-directory: ./noir-wasm-testing
        run: npm install

      - name: Run tests
        working-directory: ./noir-wasm-testing
        run: npm test
